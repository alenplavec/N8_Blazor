@page "/povezave"
@inject HttpClient Http
@using blazor_n8.Models
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Forms

<h3>Povezave</h3>

<button class="btn btn-primary" @onclick="() => dodajanjePovezave = true">Dodaj Povezavo</button>

<div class="mb-3">
    <select @onchange="ObSpremembiAtributa" class="form-select">
        <option value="IzdelekId">Izdelek ID</option>
        <option value="DobaviteljId">Dobavitelj ID</option>
    </select>

    <button class="btn btn-secondary" @onclick="SmerSortiranjaSpremenjena">Sortiraj: @(sortiranjePadajoce ? "Padajoče" : "Naraščajoče")</button>
</div>

@if (povezave == null)
{
        <p><em>Nalaganje...</em></p>
}
else
{
        <table class="table">
            <thead>
                <tr>
                    <th>Izdelek ID</th>
                    <th>Izdelek Naziv</th>
                    <th>Dobavitelj ID</th>
                    <th>Dobavitelj Naziv</th>
                    <th>Zaloga</th>
                    <th>Akcije</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var povezava in povezave)
            {
                    <tr>
                        <td>@povezava.IzdelekId</td>
                        <td>@povezava.IzdelekNaziv</td>
                        <td>@povezava.DobaviteljId</td>
                        <td>@povezava.DobaviteljNaziv</td>
                        <td>@povezava.KolicinaNaZalogi</td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => OdstraniPovezavo(povezava.Id)">Odstrani</button>
                        </td>
                    </tr>
            }
            </tbody>
        </table>
}

@if (dodajanjePovezave)
{
        <EditForm Model="novaPovezava" OnValidSubmit="DodajPovezavo">
            <div class="mb-3">
                <label for="izdelekId" class="form-label">Izdelek ID</label>
                <InputNumber id="izdelekId" class="form-control" @bind-Value="novaPovezava.IzdelekId" />
            </div>
            <div class="mb-3">
                <label for="dobaviteljId" class="form-label">Dobavitelj ID</label>
                <InputNumber id="dobaviteljId" class="form-control" @bind-Value="novaPovezava.DobaviteljId" />
            </div>
            <div class="mb-3">
                <label for="kolicina" class="form-label">Količina na zalogi</label>
                <InputNumber id="kolicina" class="form-control" @bind-Value="novaPovezava.KolicinaNaZalogi" />
            </div>
            <button type="submit" class="btn btn-success">Shrani</button>
        </EditForm>
}

@code {
    private IzdelekDobaviteljDTO novaPovezava = new IzdelekDobaviteljDTO();
    private bool dodajanjePovezave = false;
    private List<IzdelekDobaviteljDTO> povezave;
    private string trenutniStolpecZaSortiranje = string.Empty;
    private bool sortiranjePadajoce = false;

    protected override async Task OnInitializedAsync()
    {
        await NaloziPovezave();
    }

    private async Task NaloziPovezave()
    {
        var url = $"/povezave?attrSortiranja={trenutniStolpecZaSortiranje}&padajoce={sortiranjePadajoce}";
        povezave = await Http.GetFromJsonAsync<List<IzdelekDobaviteljDTO>>(url);
    }

    private async Task ObSpremembiAtributa(ChangeEventArgs e)
    {
        trenutniStolpecZaSortiranje = e.Value.ToString();
        await NaloziPovezave();
    }

    private async Task SmerSortiranjaSpremenjena()
    {
        sortiranjePadajoce = !sortiranjePadajoce;
        await NaloziPovezave();
    }

    private async Task DodajPovezavo()
    {
        var odgovor = await Http.PostAsJsonAsync("/povezave/dodajPovezavo", novaPovezava);
        if (odgovor.IsSuccessStatusCode)
        {
            dodajanjePovezave = false;
            novaPovezava = new IzdelekDobaviteljDTO();
            await NaloziPovezave();
        }
    }

    private async Task OdstraniPovezavo(int id)
    {
        var odgovor = await Http.DeleteAsync($"/povezave/odstraniPovezavo/{id}");
        if (odgovor.IsSuccessStatusCode)
        {
            await NaloziPovezave();
        }
    }
}
